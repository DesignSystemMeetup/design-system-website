self.oninstall = event => {
	event.waitUntil(
		caches.open('design-system-meetup-1.0.1').then(cache => {
			return cache.addAll(["assets/css/site.min.css","assets/favicons/android-chrome-192x192.png","assets/favicons/android-chrome-512x512.png","assets/favicons/apple-touch-icon.png","assets/favicons/browserconfig.xml","assets/favicons/favicon-16x16.png","assets/favicons/favicon-32x32.png","assets/favicons/favicon.ico","assets/favicons/mstile-150x150.png","assets/favicons/safari-pinned-tab.svg","assets/favicons/site.webmanifest","assets/img/atlassian.png","assets/img/dta.png","assets/img/expert360.png","assets/img/invision.png","assets/img/og-image.jpg","assets/img/thinkmill.png","assets/img/tomwalker.png","assets/img/zip.png","assets/js/script.min.js","assets/svg/sprite.svg","code-of-conduct/","/","v1.0.0/","v2.0.0/","v3.0.0/","v4.0.0/","v5.0.0/"]);
		})
	);
	// replaces the old SW automatically
	self.skipWaiting();
};
self.onactivate = event => {
	event.waitUntil(
		caches
		.keys()
		.then((cacheNames) => {
			const deleteOldCaches = cacheNames.map((cacheName) => {
				if (cacheName !== 'design-system-meetup-1.0.1'){
					return caches.delete(cacheName);
				}
				// Leave the current cache alone
			});
			//removing old cache
			return Promise.all(deleteOldCaches);
		})
	)
	//ensures all open tabs use new service worker
	self.clients.claim();
};
self.onfetch = event => {
	event.respondWith(
		caches.open('design-system-meetup-1.0.1').then(function(cache) {
			//checks if it's in cache
			return cache.match(event.request).then(function(cacheResponse) {
			  	// fetches latest resource from server
				var fetchPromise = fetch(event.request).then(function(networkResponse) {
					cache.put(event.request, networkResponse.clone());
					return networkResponse;
				})
				return cacheResponse || fetchPromise;
			})
		})
	);
};
